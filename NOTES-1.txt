using jdeps (report usage of non standard API):
/usr/jdk/jdk-9/bin/jdeps --jdk-internals target deps/vertx-core-3.3.3.jar deps/vertx-web-3.3.3.jar deps/netty-transport-4.1.5.Final.jar deps/netty-common-4.1.5.Final.jar deps/netty-resolver-4.1.5.Final.jar deps/netty-resolver-dns-4.1.5.Final.jar deps/netty-codec-http-4.1.5.Final.jar deps/netty-codec-4.1.5.Final.jar deps/netty-buffer-4.1.5.Final.jar deps/netty-handler-4.1.5.Final.jar deps/netty-codec-dns-4.1.5.Final.jar deps/netty-codec-http2-4.1.5.Final.jar deps/jackson-databind-2.7.4.jar deps/jackson-core-2.7.4.jar deps/jackson-annotations-2.7.0.jar
netty-common-4.1.5.Final.jar -> jdk.unsupported
   io.netty.util.internal.PlatformDependent$Mpsc$1    -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.PlatformDependent0          -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.PlatformDependent0$2        -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.PlatformDependent0$3        -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.UnsafeAtomicIntegerFieldUpdater -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.UnsafeAtomicLongFieldUpdater -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.UnsafeAtomicReferenceFieldUpdater -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ConcurrentHashMapV8   -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ConcurrentHashMapV8$1 -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ConcurrentHashMapV8$TreeBin -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.CountedCompleter      -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.CountedCompleter$1    -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ForkJoinPool          -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ForkJoinPool$2        -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ForkJoinTask          -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.ForkJoinTask$1        -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.Striped64             -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.Striped64$1           -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.chmv8.Striped64$Cell        -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.ConcurrentSequencedCircularArrayQueue -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueConsumerField -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.MpmcArrayQueueProducerField -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerField -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueHeadLimitField -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueTailField -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.util.JvmInfo -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
   io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess -> sun.misc.Unsafe                                    JDK internal API (jdk.unsupported)
netty-handler-4.1.5.Final.jar -> java.base
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.util.ObjectIdentifier                 JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.AlgorithmId                      JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.CertificateAlgorithmId           JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.CertificateIssuerName            JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.CertificateSerialNumber          JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.CertificateSubjectName           JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.CertificateValidity              JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.CertificateVersion               JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.CertificateX509Key               JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.X500Name                         JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.X509CertImpl                     JDK internal API (java.base)
   io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> sun.security.x509.X509CertInfo                     JDK internal API (java.base)

Warning: JDK internal APIs are unsupported and private to JDK implementation that are
subject to be removed or changed incompatibly and could break your application.
Please modify your code to eliminate dependence on any JDK internal APIs.
For the most recent update on JDK internal API replacements, please check:
https://wiki.openjdk.java.net/display/JDK8/Java+Dependency+Analysis+Tool

JDK Internal API                         Suggested Replacement
----------------                         ---------------------
sun.misc.Unsafe                          See http://openjdk.java.net/jeps/260
sun.security.x509.X500Name               Use javax.security.auth.x500.X500Principal @since 1.4

DIAGNOSTIC:
  Use Unsafe, maybe ok
  Use sun.security.x509.X500Name :(  -> not great for HTTPS
  

when switching to jdk9 (run only):
  ERROR 1:
    Exception in thread "main" java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException

    When loading the XML configuration, we are using JAX-B which is not among the default root modules.

  SOLUTION:
    Add explicitly JAX-B on runtime

    java --add-modules java.xml.bind


  ERROR 2:
    Exception in thread "main" java.lang.NoClassDefFoundError: Could not initialize class io.netty.util.internal.PlatformDependent0
	  at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:101)
	  
	The real error is not visible :(
	
	Hopefully, there is a flag to ask to print every module access violations
	-Dsun.reflect.debugModuleAccessChecks=true

	java.lang.reflect.InaccessibleObjectException: Unable to make field long java.nio.Buffer.address accessible: module java.base does not "opens java.nio" to unnamed module @5606c0b
	  at java.base/jdk.internal.reflect.Reflection.throwInaccessibleObjectException(Reflection.java:427)
	  at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:201)
	  at java.base/java.lang.reflect.Field.checkCanSetAccessible(Field.java:171)
	  at java.base/java.lang.reflect.Field.setAccessible(Field.java:165)
	  at io.netty.util.internal.PlatformDependent0$1.run(PlatformDependent0.java:69)
      ...
	
	Thats's a better error message !
	In the static initializer of PlatformDependent0, 
      https://github.com/netty/netty/blob/67d3a78123fa3faa85c1a150bd4ee69425079b3d/common/src/main/java/io/netty/util/internal/PlatformDependent0.java#L68
    the exception is raised because the code tries to access a field of java.nui.Buffer which is not in an open package.
  
  SOLUTION:
    java --add-opens java.base/java.nio=ALL-UNNAMED
    
    
  ERROR 3:
   Exception in thread "main" java.lang.IllegalStateException: failed to create a child event loop
	 at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:88)
	 ...
   Caused by: java.lang.reflect.InaccessibleObjectException:
     Unable to make field protected java.util.Set sun.nio.ch.SelectorImpl.selectedKeys accessible:
     module java.base does not "opens sun.nio.ch" to unnamed module @6c3f5566
   
   SOLUTION:
     java --add-opens java.base/sun.nio.ch=ALL-UNNAMED
     
   
   ERROR 4:
     Jan 02, 2017 3:52:29 PM io.netty.resolver.dns.DnsServerAddresses <clinit>
     WARNING: Default DNS servers: [/8.8.8.8:53, /8.8.4.4:53] (Google Public DNS as a fallback)
     
     In the static initializer of io.netty.resolver.dns.DnsServerAddresses,
     it tries to load the class sun.net.dns.ResolverConfiguration which is in a non-exported package
       https://github.com/netty/netty/blob/67d3a78123fa3faa85c1a150bd4ee69425079b3d/resolver-dns/src/main/java/io/netty/resolver/dns/DnsServerAddresses.java#L49
       
   SOLUTION:
     java --add-exports java.base/sun.net.dns=ALL-UNNAMED

     
   
   